// File generated by ANTLR. DO NOT EDIT.

package pathpolicyconstraints

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 21, 113,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 3, 2, 3, 2, 3, 3,
	3, 3, 7, 3, 48, 10, 3, 12, 3, 14, 3, 51, 11, 3, 3, 3, 5, 3, 54, 10, 3,
	3, 4, 6, 4, 57, 10, 4, 13, 4, 14, 4, 58, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6,
	3, 6, 7, 6, 67, 10, 6, 12, 6, 14, 6, 70, 11, 6, 3, 7, 3, 7, 3, 7, 3, 8,
	3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3,
	11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16,
	3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3,
	21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 2, 2, 22, 3, 3, 5, 2, 7, 4, 9, 5,
	11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29,
	15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 3, 2, 7, 5, 2, 51,
	59, 67, 72, 99, 104, 5, 2, 50, 59, 67, 72, 99, 104, 5, 2, 11, 12, 15, 15,
	34, 34, 3, 2, 51, 59, 3, 2, 50, 59, 2, 115, 2, 3, 3, 2, 2, 2, 2, 7, 3,
	2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15,
	3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2,
	23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2,
	2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2,
	2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 3, 43, 3, 2, 2, 2, 5, 53, 3, 2,
	2, 2, 7, 56, 3, 2, 2, 2, 9, 62, 3, 2, 2, 2, 11, 64, 3, 2, 2, 2, 13, 71,
	3, 2, 2, 2, 15, 74, 3, 2, 2, 2, 17, 77, 3, 2, 2, 2, 19, 84, 3, 2, 2, 2,
	21, 86, 3, 2, 2, 2, 23, 88, 3, 2, 2, 2, 25, 90, 3, 2, 2, 2, 27, 92, 3,
	2, 2, 2, 29, 94, 3, 2, 2, 2, 31, 96, 3, 2, 2, 2, 33, 98, 3, 2, 2, 2, 35,
	100, 3, 2, 2, 2, 37, 102, 3, 2, 2, 2, 39, 104, 3, 2, 2, 2, 41, 106, 3,
	2, 2, 2, 43, 44, 7, 46, 2, 2, 44, 4, 3, 2, 2, 2, 45, 49, 9, 2, 2, 2, 46,
	48, 9, 3, 2, 2, 47, 46, 3, 2, 2, 2, 48, 51, 3, 2, 2, 2, 49, 47, 3, 2, 2,
	2, 49, 50, 3, 2, 2, 2, 50, 54, 3, 2, 2, 2, 51, 49, 3, 2, 2, 2, 52, 54,
	7, 50, 2, 2, 53, 45, 3, 2, 2, 2, 53, 52, 3, 2, 2, 2, 54, 6, 3, 2, 2, 2,
	55, 57, 9, 4, 2, 2, 56, 55, 3, 2, 2, 2, 57, 58, 3, 2, 2, 2, 58, 56, 3,
	2, 2, 2, 58, 59, 3, 2, 2, 2, 59, 60, 3, 2, 2, 2, 60, 61, 8, 4, 2, 2, 61,
	8, 3, 2, 2, 2, 62, 63, 7, 50, 2, 2, 63, 10, 3, 2, 2, 2, 64, 68, 9, 5, 2,
	2, 65, 67, 9, 6, 2, 2, 66, 65, 3, 2, 2, 2, 67, 70, 3, 2, 2, 2, 68, 66,
	3, 2, 2, 2, 68, 69, 3, 2, 2, 2, 69, 12, 3, 2, 2, 2, 70, 68, 3, 2, 2, 2,
	71, 72, 7, 47, 2, 2, 72, 73, 7, 50, 2, 2, 73, 14, 3, 2, 2, 2, 74, 75, 7,
	47, 2, 2, 75, 76, 5, 11, 6, 2, 76, 16, 3, 2, 2, 2, 77, 78, 7, 47, 2, 2,
	78, 79, 5, 5, 3, 2, 79, 80, 7, 97, 2, 2, 80, 81, 5, 5, 3, 2, 81, 82, 7,
	97, 2, 2, 82, 83, 5, 5, 3, 2, 83, 18, 3, 2, 2, 2, 84, 85, 7, 37, 2, 2,
	85, 20, 3, 2, 2, 2, 86, 87, 7, 65, 2, 2, 87, 22, 3, 2, 2, 2, 88, 89, 7,
	60, 2, 2, 89, 24, 3, 2, 2, 2, 90, 91, 7, 45, 2, 2, 91, 26, 3, 2, 2, 2,
	92, 93, 7, 42, 2, 2, 93, 28, 3, 2, 2, 2, 94, 95, 7, 43, 2, 2, 95, 30, 3,
	2, 2, 2, 96, 97, 7, 125, 2, 2, 97, 32, 3, 2, 2, 2, 98, 99, 7, 127, 2, 2,
	99, 34, 3, 2, 2, 2, 100, 101, 7, 66, 2, 2, 101, 36, 3, 2, 2, 2, 102, 103,
	7, 73, 2, 2, 103, 38, 3, 2, 2, 2, 104, 105, 7, 78, 2, 2, 105, 40, 3, 2,
	2, 2, 106, 107, 7, 84, 2, 2, 107, 108, 7, 71, 2, 2, 108, 109, 7, 76, 2,
	2, 109, 110, 7, 71, 2, 2, 110, 111, 7, 69, 2, 2, 111, 112, 7, 86, 2, 2,
	112, 42, 3, 2, 2, 2, 7, 2, 49, 53, 58, 68, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "','", "", "'0'", "", "", "", "", "'#'", "'?'", "':'", "'+'", "'('",
	"')'", "'{'", "'}'", "'@'", "'G'", "'L'", "'REJECT'",
}

var lexerSymbolicNames = []string{
	"", "", "WHITESPACE", "ZERO", "NUM", "WILDCARDAS", "LEGACYAS", "AS", "HASH",
	"QUESTIONMARK", "ELSE", "PLUS", "LPAR", "RPAR", "LBRACE", "RBRACE", "MONKEYTAIL",
	"GLOBALPOLICY", "LOCALPOLICY", "REJECT",
}

var lexerRuleNames = []string{
	"T__0", "HEXA", "WHITESPACE", "ZERO", "NUM", "WILDCARDAS", "LEGACYAS",
	"AS", "HASH", "QUESTIONMARK", "ELSE", "PLUS", "LPAR", "RPAR", "LBRACE",
	"RBRACE", "MONKEYTAIL", "GLOBALPOLICY", "LOCALPOLICY", "REJECT",
}

type PathPolicyConstraintsLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewPathPolicyConstraintsLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *PathPolicyConstraintsLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewPathPolicyConstraintsLexer(input antlr.CharStream) *PathPolicyConstraintsLexer {
	l := new(PathPolicyConstraintsLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "PathPolicyConstraints.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// PathPolicyConstraintsLexer tokens.
const (
	PathPolicyConstraintsLexerT__0         = 1
	PathPolicyConstraintsLexerWHITESPACE   = 2
	PathPolicyConstraintsLexerZERO         = 3
	PathPolicyConstraintsLexerNUM          = 4
	PathPolicyConstraintsLexerWILDCARDAS   = 5
	PathPolicyConstraintsLexerLEGACYAS     = 6
	PathPolicyConstraintsLexerAS           = 7
	PathPolicyConstraintsLexerHASH         = 8
	PathPolicyConstraintsLexerQUESTIONMARK = 9
	PathPolicyConstraintsLexerELSE         = 10
	PathPolicyConstraintsLexerPLUS         = 11
	PathPolicyConstraintsLexerLPAR         = 12
	PathPolicyConstraintsLexerRPAR         = 13
	PathPolicyConstraintsLexerLBRACE       = 14
	PathPolicyConstraintsLexerRBRACE       = 15
	PathPolicyConstraintsLexerMONKEYTAIL   = 16
	PathPolicyConstraintsLexerGLOBALPOLICY = 17
	PathPolicyConstraintsLexerLOCALPOLICY  = 18
	PathPolicyConstraintsLexerREJECT       = 19
)
